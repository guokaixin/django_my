#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-12-03 09:23
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.PositiveSmallIntegerField(choices=[(0, 'unknown'), (1, 'male'), (2, 'female')], db_index=True, default=0, verbose_name='gender')),
                ('constellation', models.CharField(blank=True, max_length=10, null=True, verbose_name='constellation')),
                ('introduction', models.TextField(blank=True, null=True, verbose_name='about self')),
                ('mobile', models.CharField(blank=True, max_length=32, null=True, verbose_name='mobile')),
                ('nickname', models.CharField(blank=True, max_length=32, null=True, verbose_name='nickname')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=b'', verbose_name='avatar')),
                ('vip_start', models.DateField(blank=True, null=True, verbose_name='vip start')),
                ('vip_date', models.DateField(blank=True, null=True, verbose_name='vip date')),
                ('vip_remind', models.BooleanField(default=False, verbose_name='vip data end remind')),
                ('remind_content', models.CharField(blank=True, max_length=512, null=True, verbose_name='remind content')),
                ('platform', models.CharField(blank=True, max_length=32, null=True, verbose_name='platform')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('is_available', models.BooleanField(default=False, verbose_name='user is available')),
                ('dt_created', models.DateTimeField(auto_now_add=True, verbose_name='created datetime')),
                ('dt_updated', models.DateTimeField(auto_now=True, verbose_name='updated datetime')),
            ],
            options={
                'get_latest_by': 'id',
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserAuthority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, unique=True, verbose_name='user authority code')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='user authority name')),
                ('dt_created', models.DateTimeField(auto_now_add=True, verbose_name='created datetime')),
                ('dt_updated', models.DateTimeField(auto_now=True, verbose_name='updated datetime')),
            ],
            options={
                'get_latest_by': 'id',
                'verbose_name': 'user authority',
                'verbose_name_plural': 'user authoritis',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, unique=True, verbose_name='user type code')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='user type name')),
                ('dt_created', models.DateTimeField(auto_now_add=True, verbose_name='created datetime')),
                ('dt_updated', models.DateTimeField(auto_now=True, verbose_name='updated datetime')),
            ],
            options={
                'get_latest_by': 'id',
                'verbose_name': 'user role',
                'verbose_name_plural': 'user roles',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, unique=True, verbose_name='user type code')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='user type name')),
                ('dt_created', models.DateTimeField(auto_now_add=True, verbose_name='created datetime')),
                ('dt_updated', models.DateTimeField(auto_now=True, verbose_name='updated datetime')),
            ],
            options={
                'get_latest_by': 'id',
                'verbose_name': 'user type',
                'verbose_name_plural': 'user types',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='authority',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='people.UserAuthority', verbose_name='user authority'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='people.UserRole', verbose_name='user role'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.UserType', verbose_name='user type'),
        ),
    ]
